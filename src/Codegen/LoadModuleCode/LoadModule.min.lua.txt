do local a,b='${Version}',game:GetService'RunService'local c,d,e,f,g,h,i,j,k=b:IsServer(),b:IsClient(),getfenv(0),{},{},{},{},{},{}local function l(m)local n,o=pcall(Instance.new,m.ClassName)if not n then return end f[m.Reference]=o if m.Closure then h[o]=m.Closure if o:IsA'BaseScript'then table.insert(j,o)end end if m.Properties then for p,q in next,m.Properties do pcall(function()o[p]=q end)end end if m.RefProperties then for p,q in next,m.RefProperties do table.insert(g,{InstanceObject=o,Property=p,ReferenceId=q})end end if m.Attributes then for p,q in next,m.Attributes do pcall(o.SetAttribute,o,p,q)end end if m.Children then for p,q in next,m.Children do local r=l(q)if r then r.Parent=o end end end return o end local m={}do for n,o in next,ModuleRoot do table.insert(m,l(o))end end local function n(o)local p=i[o]if o.ClassName=='ModuleScript'and p then return unpack(p)end local q=h[o]if not q then return end do local r local s={['maui']=table.freeze{Version=a,GetScript=function()return script end,GetShared=function()return k end},['script']=o,['require']=function(s,...)if s and s.ClassName=='ModuleScript'and h[s]then return n(s)end return require(s,...)end,['getfenv']=function(s,...)if type(s)=='number'and s>=0 then if s==0 then return r else local t,u=pcall(getfenv,s)if t and u==e then return r end end end return getfenv(s,...)end,['setfenv']=function(s,t,...)if type(s)=='number'and s>=0 then if s==0 then return setfenv(r,t)else local u,v=pcall(getfenv,s)if u and v==e then return setfenv(r,t)end end end return setfenv(s,t,...)end}r=setmetatable({},{__index=function(t,u)local v=rawget(r,u)if v~=nil then return v end local w=s[u]if w~=nil then return w end return e[u]end})setfenv(q,r)end local r=coroutine.wrap(q)if o:IsA'BaseScript'then local s,t=if o.Enabled then task.defer(r)else nil t=o:GetPropertyChangedSignal'Enabled':Connect(function(u)t:Disconnect()if u==true then n(o)else pcall(task.cancel,s)end end)return else local s={r()}i[o]=s return unpack(s)end end for o,p in next,g do pcall(function()p.InstanceObject[p.Property]=f[p.ReferenceId]end)end for q,r in next,j do if(c and r.ClassName=='Script')or(d and r.ClassName=='LocalScript')then n(r)end end end