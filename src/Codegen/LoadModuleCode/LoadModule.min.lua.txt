do local a,b='${Version}',Flags or{}local c,d,e=(b.ContextualExecution==nil and true)or b.ContextualExecution do if c then local f=game:GetService'RunService'd=f:IsServer()e=f:IsClient()end end local f,g,h,i,j,k,l=getfenv(0),{},{},{},{},{},{}local function m(n)local o,p=pcall(Instance.new,n.ClassName)if not o then return end g[n.Reference]=p if n.Closure then i[p]=n.Closure if p:IsA'BaseScript'then table.insert(k,p)end end if n.Properties then for q,r in next,n.Properties do pcall(function()p[q]=r end)end end if n.RefProperties then for q,r in next,n.RefProperties do table.insert(h,{InstanceObject=p,Property=q,ReferenceId=r})end end if n.Attributes then for q,r in next,n.Attributes do pcall(p.SetAttribute,p,q,r)end end if n.Children then for q,r in next,n.Children do local s=m(r)if s then s.Parent=p end end end return p end local n={}do for o,p in next,ModuleRoot do table.insert(n,m(p))end end local function o(p)local q=j[p]if p.ClassName=='ModuleScript'and q then return unpack(q)end local r=i[p]if not r then return end do local s local t={['maui']=table.freeze{Version=a,GetScript=function()return script end,GetShared=function()return l end},['script']=p,['require']=function(t,...)if t and t.ClassName=='ModuleScript'and i[t]then return o(t)end return require(t,...)end,['getfenv']=function(t,...)if type(t)=='number'and t>=0 then if t==0 then return s else local u,v=pcall(getfenv,t+1)if u and v==f then return s end end end return getfenv(t,...)end,['setfenv']=function(t,u,...)if type(t)=='number'and t>=0 then if t==0 then return setfenv(s,u)else local v,w=pcall(getfenv,t+1)if v and w==f then return setfenv(s,u)end end end return setfenv(t,u,...)end}s=setmetatable({},{__index=function(u,v)local w=rawget(s,v)if w~=nil then return w end local x=t[v]if x~=nil then return x end return f[v]end})setfenv(r,s)end local s=coroutine.wrap(r)if p:IsA'BaseScript'then local t=(not c or not p.Disabled)and task.defer(s)if c then local u u=p:GetPropertyChangedSignal'Disabled':Connect(function(v)u:Disconnect()if v==false then o(p)else pcall(task.cancel,t)end end)end return else local t={s()}j[p]=t return unpack(t)end end for p,q in next,h do pcall(function()q.InstanceObject[q.Property]=g[q.ReferenceId]end)end for r,s in next,k do if not c or((d and s.ClassName=='Script')or(e and s.ClassName=='LocalScript'))then o(s)end end if b.ReturnMainModule==nil or b.ReturnMainModule then local t do for u,v in next,n do if v.ClassName=='ModuleScript'and v.Name=='MainModule'then t=v break end end end if t then return o(t)end end end